version: '3.8'
services:
  # test-postgres:
  #   container_name: test-postgres
  #   build:
  #     context: ./postgres
  #     dockerfile: Dockerfile
  #   image: test/postgres-db
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER:-test}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-test}
  #     POSTGRES_DB: ${POSTGRES_DB_NAME:-test_db}
  #   ports:
  #     - '${POSTGRES_PORT:-5432}:5432'
  #   volumes:
  #     - pgdata:/var/lib/postgresql/data
  #   restart: unless-stopped
  #   networks:
  #     - db-network

  test-server:
    container_name: test-server
    build:
      context: .
      dockerfile: Dockerfile
    command: npm run start:prod
    image: test/server-app:prod-v1
    # networks:
    #   - db-network
    #   - cache-network
    env_file: .env
    ports:
      - '${APP_PORT-8888}:${PORT-8888}' # expose-to-the-world : only-in-the-docker
    # depends_on:
    #   - test-postgres
    #   - test-redis
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  # test-redis:
  #   image: redis:7.2.4-alpine
  #   volumes:
  #     - .docker/data/redis:/data
  #   command: redis-server --requirepass ${REDIS_PASSWORD-redispass}
  #   restart: unless-stopped
  #   networks:
  #     - cache-network

# networks:
#   cache-network:
#     driver: bridge
#   db-network:
#     driver: bridge

volumes:
  pgdata:
