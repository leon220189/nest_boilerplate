version: '3.8'
services:
  db:
    image: postgres:15.3-alpine3.18
    restart: unless-stopped
    networks:
      - db-network
      - pg-network
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB_NAME}
    container_name: nest-postgres-db
    ports:
      - '${POSTGRES_PORT}:5432'

  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: registry.gitlab.com/lexuanbinh220189/nestjs_blank_v1:latest #image to run CICD
    networks:
      - db-network
      - cache-network
    env_file: .env

    ports:
      - '${APP_PORT}:${PORT}' # expose-to-the-world : only-in-the-docker
    container_name: nest-blank-app-be
    depends_on:
      - db
      - redis

  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    container_name: nest-pgadmin4
    networks:
      - pg-network
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_LISTEN_PORT=${PGADMIN_LISTEN_PORT}
    ports:
      - '${PG_ADMIN_PORT}:80'
    depends_on:
      - db

  redis:
    image: redis:5-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    restart: unless-stopped
    networks:
      - cache-network

networks:
  cache-network:
    driver: bridge
  db-network:
    driver: bridge
  pg-network:
    driver: bridge

volumes:
  local_pgdata:
  pgadmin-data:
  exclude:
