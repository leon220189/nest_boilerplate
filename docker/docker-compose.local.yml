version: '3.8'
services:
  leon-postgres:
    container_name: leon-postgres
    build:
      context: ./../postgres
      dockerfile: Dockerfile
    image: leon/postgres-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-test}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-test}
      POSTGRES_DB: ${POSTGRES_DB_NAME:-test_db}
      PG_DATA: /var/lib/postgresql/data
      TZ: ${DB_TIMEZONE}
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    volumes:
      - leon-pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - db-network

  leon-server:
    container_name: leon-server
    build:
      context: ./../
      dockerfile: ./docker/Dockerfile.dev
    command: pnpm run start:dev
    image: leon/server-app:dev-v1
    networks:
      - db-network
      - cache-network
    ports:
      - '${APP_PORT:-8888}:${PORT:-8888}' # expose-to-the-world : only-in-the-docker
    depends_on:
      - leon-postgres
      - leon-redis
    volumes:
      - ./../:/usr/src/app
      - leon-backend-node-modules:/usr/src/app/node_modules
      # - leon-backend-dist:/usr/src/app/dist

  leon-redis:
    container_name: leon-redis
    image: redis:7.2.4-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD:-redispass}
    restart: unless-stopped
    networks:
      - cache-network
    volumes:
      - leon-redisdata:/data

  leon-nginx:
    container_name: leon-nginx
    image: nginx:latest
    volumes:
      - ./../nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - leon-server
    networks:
      - db-network
      - cache-network
    ports:
      - "3000:3000"

networks:
  cache-network:
    driver: bridge
  db-network:
    driver: bridge

volumes:
  leon-pgdata:
  leon-backend-node-modules:
  leon-backend-dist:
  leon-redisdata: